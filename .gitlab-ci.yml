stages:
  # @TODO: units, linter
  - binaries
  - images

.dind:
  image: egnd/docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login ${CI_REGISTRY} -u gitlab-ci-token -p ${CI_JOB_TOKEN}

amd64-linux-bin:
  image: golang:1.18-alpine
  stage: binaries
  variables:
    CGO_ENABLED: 0
    GOPROXY: https://proxy.golang.org,direct
    GOSUMDB: "off"
    GOOS: linux
    GOARCH: amd64
    BUILD_VERSION: latest
  before_script:
    - apk add -q unzip make
  script:
    - make build-indexer BUILD_VERSION=${BUILD_VERSION}
    - make build-server BUILD_VERSION=${BUILD_VERSION}
    - make build-converter
  cache:
    key: fb2c-${GOOS}-${GOARCH}
    paths:
      - fb2c-*.zip
  artifacts:
    paths:
      - bin/${GOOS}-${GOARCH}
    expire_in: 1 day
  only:
    - master
  except:
    - tags

arm64-linux-bin:
  extends: amd64-linux-bin
  variables:
    GOARCH: arm64

images-latest:
  extends: .dind
  stage: images
  dependencies:
    - amd64-linux-bin
    - arm64-linux-bin
  script:
    - docker buildx create --driver=docker-container --use
    - docker buildx build --push --progress=plain
        --platform linux/arm64,linux/amd64
        --file .ci/ci.Dockerfile
        --tag ${CI_REGISTRY_IMAGE}:latest
        --tag=${CI_REGISTRY_IMAGE}/ci:${CI_COMMIT_SHORT_SHA}
        .
  only:
    - master
  except:
    - tags

images-stable:
  extends: .dind
  stage: images
  script:
    - docker buildx create --driver=docker-container --use
    - docker buildx build --push --progress=plain
        --build-arg SRC_IMG=${CI_REGISTRY_IMAGE}/ci:${CI_COMMIT_SHORT_SHA}
        --platform linux/arm64,linux/amd64
        --file .ci/proxy.Dockerfile
        --tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
        .ci
  only:
    - tags
